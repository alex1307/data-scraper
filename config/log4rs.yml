# Scan this file for changes every 30 seconds
refresh_rate: 30 seconds

appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console
    encoder:
      pattern: "{h(==> {d} == {l} == - [{T}:{M}]:{L} - {m} {n} )}"

  listing-file-appender:
    kind: rolling_file
    path: "_log/listing.log"
    policy:
      # Identifies which policy is to be used. If no kind is specified, it will
      # default to "compound".
      kind: compound
      # The remainder of the configuration is passed along to the policy's
      # deserializer, and will vary based on the kind of policy.
      trigger:
        kind: size
        limit: 5mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "_log/listing.{}.log"
  meta-file-appender:
    kind: rolling_file
    path: "_log/meta.log"
    policy:
      # Identifies which policy is to be used. If no kind is specified, it will
      # default to "compound".
      kind: compound
      # The remainder of the configuration is passed along to the policy's
      # deserializer, and will vary based on the kind of policy.
      trigger:
        kind: size
        limit: 5mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "_log/meta.{}.log"
  deatils-file-appender:
    kind: rolling_file
    path: "_log/deatils.log"
    policy:
      # Identifies which policy is to be used. If no kind is specified, it will
      # default to "compound".
      kind: compound
      # The remainder of the configuration is passed along to the policy's
      # deserializer, and will vary based on the kind of policy.
      trigger:
        kind: size
        limit: 5mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "_log/deatils.{}.log"


# Set the default logging level to "warn" and attach the "stdout" appender to the root
root:
  level: info
  appenders:
    - stdout

loggers:
  # Raise the maximum log level for events sent to the "app::backend::db" logger to "info"
  app::backend::db:
    level: info
  listing:
    level: info
    appenders:
      - listing-file-appender
  metadata::data_scraper:
    level: info
    appenders:
      - meta-file-appender
  details:
    level: info
    appenders:
      - details-file-appender

  # Route log events sent to the "app::requests" logger to the "requests" appender,
  # and *not* the normal appenders installed at the root
  # app::requests:
  #   level: info
  #   appenders:
  #     - requests
  #   additive: false
