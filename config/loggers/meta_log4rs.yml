# Scan this file for changes every 30 seconds
refresh_rate: 30 seconds

appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console
    encoder:
      pattern: "{h(==> {d} == {l} == - [{T}:{M}]:{L} - {m} {n} )}"

  rolling-file-appender:
    kind: rolling_file
    path: "_log/metadata.log"
    policy:
      # Identifies which policy is to be used. If no kind is specified, it will
      # default to "compound".
      kind: compound
      # The remainder of the configuration is passed along to the policy's
      # deserializer, and will vary based on the kind of policy.
      trigger:
        kind: size
        limit: 5mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "_log/metadata.{}.log"
  
# Set the default logging level to "warn" and attach the "stdout" appender to the root
root:
  level: info
  appenders:
    - stdout
    - rolling-file-appender

loggers:
  # Raise the maximum log level for events sent to the "app::backend::db" logger to "info"
  app::backend::db:
    level: info

